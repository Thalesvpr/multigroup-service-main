syntax = "proto3";

package user_service;
//protoc --plugin=protoc-gen-ts_proto=".\\node_modules\\.bin\\protoc-gen-ts_proto.cmd" --ts_proto_out=./ ./apps/auth/proto/auth.proto
import "google/protobuf/empty.proto";
import "./shared.proto";


message HealthStatus {
  int32 status = 1;
}

message UpdateUserDTO {
    string user_id = 1;
    string first_name = 2;
    string last_name = 3;
    string phone_number = 4;
    string address = 5;
}

message UserData { 
  string user_id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  string phone_number = 5;
  string address = 6;
}

message UpdateUserData {
    string user_id = 1;
    string first_name = 2;
    string last_name = 3;
    string phone_number = 4;
    string address = 5;
}

message UserResponse {
  oneof result {
    UserData data = 1;
    BadData error = 2;
  }
}

// Definição do serviço UserService
service UserService {
  rpc CheckHealth(google.protobuf.Empty) returns (HealthStatus);  // Método de verificação de saúde
  rpc UpdateUser(UpdateUserDTO) returns (UserResponse);
}



